@using IoTPortal.Model
@inject IJSRuntime JsRuntime
@inject IDeviceApi DeviceApi
@layout Shared.MainLayout

<div class="card">
    <DeviceImage DeviceImageLink="@GetDeviceLink(Device.Name)" />
    <div class="card-body">
        <h5 class="card-title">@Device.Name</h5>
        <p class="card-text">
            This Device has id <span class="highlight">@Device.Id</span> and is <span class="highlight">@(Device.Published ? "" : "not ") published!</span>
        </p>
    </div>
    <ul class="list-group list-group-flush">
        <li class="list-group-item"><a href="@Device.Link">Visit device!</a></li>
    </ul>
    <button @onclick="HandleValidSubmit">Yes!</button>
</div>

@code {
    [Parameter]
    public Device Device { get; set; }

    private string GetDeviceLink(string deviceName) => Device.ImageLink;

    private async Task OnYes()
    {
        var device = await DeviceApi.GetDeviceAsync(Device.Name);
        Console.WriteLine("Write to the console in C#! 'Yes' button was selected.");
         await DeviceApi.PostDevice(Device);
    }
    private async Task HandleValidSubmit()
    {
        var device = new Device();
       
        Console.WriteLine("test");
        DeviceApi.PostDevice(Device);
    }
}
}
