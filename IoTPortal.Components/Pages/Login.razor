@page "/"
@page "/login"
@inject IJSRuntime JsRuntime
@inject IUserApi UserApi
@using System.Linq

<style>
    .button {
        font: bold 16px Arial;
        text-decoration: none;
        background-color: #EEEEEE;
        color: #333333;
        padding: 2px 6px 2px 6px;
        border-top: 1px solid #CCCCCC;
        border-right: 1px solid #333333;
        border-bottom: 1px solid #333333;
        border-left: 1px solid #CCCCCC;
    }
</style>

<div class="book">
    <h1>IoT Portal - Login</h1>

    <table>
        <tr>
            <td>
                <h2>Username</h2>
            </td>
            <td>
                <input @bind="@username" />
            </td>
        </tr>
        <tr>
            <td>
                <h2>Password</h2>
            </td>
            <td>
                <input @bind="@password" />
            </td>
        </tr>
        <tr>
            <td>
                <button class="button" type="button" @onclick="HandleValidSubmit">Login</button>
                <a class="button" href="/devices">Login</a>
            </td>
            <td>
                <a class="button" href="/signUp">Sign up</a>
            </td>
        </tr>
    </table>

</div>

@code {
    private IoTUser User { get; set; } = new IoTUser();

    private string username { get; set; }

    private string password { get; set; }


    protected override async Task OnInitializedAsync()
    {

    }

    private async Task HandleValidSubmit()
    {
        // Current users ID
        User.Username = username;
        User.Password = password;
        var loginSuccess = true;//await UserApi.ValidateUser(User);
        if (loginSuccess)
        {

        }
    }
}
